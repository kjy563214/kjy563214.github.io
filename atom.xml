<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>My Site</title>
  
  
  <link href="https://kjy563214.github.io/atom.xml" rel="self"/>
  
  <link href="https://kjy563214.github.io/"/>
  <updated>2021-01-25T02:36:20.190Z</updated>
  <id>https://kjy563214.github.io/</id>
  
  <author>
    <name>kjy563214</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>用Hexo+GitPage搭建一个yilia主题的博客</title>
    <link href="https://kjy563214.github.io/%E5%85%B6%E4%BB%96/establish-a-blog-site-with-hexo-and-yillia-plus/"/>
    <id>https://kjy563214.github.io/%E5%85%B6%E4%BB%96/establish-a-blog-site-with-hexo-and-yillia-plus/</id>
    <published>2021-01-24T12:04:40.000Z</published>
    <updated>2021-01-25T02:36:20.190Z</updated>
    
    <content type="html"><![CDATA[<p>如何在Mac平台搭建一个跟这个网站一样的博客，记录一下踩过的坑。</p><a id="more"></a><h1 id="Hexo-简介"><a href="#Hexo-简介" class="headerlink" title="Hexo 简介"></a>Hexo 简介</h1><h1 id="初步搭建"><a href="#初步搭建" class="headerlink" title="初步搭建"></a>初步搭建</h1><p>包括环境的准备、部署到GitPage并能够基本运行起来</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>包括Node.js，Git，Hexo的环境准备以及部署到github并发布第一篇文章</p><h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h3><p>因为Hexo是基于Node.js编写的，所以不管是产物编译还是插件安装等都需要Node.js环境。</p><p>使用Homebrew的话，可以很方便的安装node.js。没有Homebrew可以参考<a href="https://zhuanlan.zhihu.com/p/90508170">这个文章</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install nodejs</span><br><span class="line">brew install npm</span><br></pre></td></tr></table></figure><p>之后运行下边命令可以看看安没安装成功，成功会显示版本号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><p>因为hexo产物要部署到github所以git也是必不可少的，同时也方便源码的管理及迁移。</p><p>mac应该自带了git运行下边命令可以查看有没有。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p>成功会显示版本号，没安装最简单方法就是安装XCode命令行工具</p><p>先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 <strong>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</strong> 安装命令行工具。</p><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p>贴一下官方<a href="https://hexo.io/zh-cn/docs/">基础文档</a></p><p>先在任意位置新建个文件夹如hexo，然后cd进去，运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>然后可以运行下边命令看是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>之后运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init myblog</span><br></pre></td></tr></table></figure><p>来初始化博客，实际上就是把hexo源码从git拉下来，myblog是文件夹名字可以随便取。这时候ls一下可以发现生成了一个myblog文件夹，cd进去之后运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>来安装运行环境。完成之后会发现myblog下生成了一系列文件及文件夹：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><p>这样一个空的网站就生成了。可以先运行起来看看效果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>命令行会显示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop</span><br></pre></td></tr></table></figure><p>接下来只需要打开浏览器并打开 <a href="http://localhost:4000/">localhost:4000</a> 就可以看到基本的效果了</p><p><img src="/%E5%85%B6%E4%BB%96/establish-a-blog-site-with-hexo-and-yillia-plus/%E5%9F%BA%E7%A1%80%E7%BD%91%E7%AB%99%E7%A4%BA%E4%BE%8B.png" alt="基本网站"></p><p>命令行<strong>⌃(control)+c</strong>就可以关掉服务器了</p><h3 id="建立GitPage"><a href="#建立GitPage" class="headerlink" title="建立GitPage"></a>建立GitPage</h3><h4 id="建立个人仓库"><a href="#建立个人仓库" class="headerlink" title="建立个人仓库"></a>建立个人仓库</h4><p>注册账号就不说了，注册之后想使用GitPage功能，需要有一个跟用户名同名的[username].github.io仓库。点击<strong>New Repository</strong>来建立仓库。<strong>owner</strong>留着默认的自己用户名就行，后边<strong>Repository name</strong>要填写<strong>你的用户名+.github.io</strong>。下边仓库类型最好直接选<strong>Public</strong>不然会有坑，这个留到后边说。点击<strong>create repository</strong></p><p><img src="/%E5%85%B6%E4%BB%96/establish-a-blog-site-with-hexo-and-yillia-plus/%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%BB%93%E5%BA%93.png" alt="建立个人仓库"></p><h4 id="如果部署后显示404"><a href="#如果部署后显示404" class="headerlink" title="如果部署后显示404"></a>如果部署后显示404</h4><p>如果建库的时候选了private仓库，后边部署的时候会发现GitPage一直都是404，这里需要做些修改。</p><ul><li><p>修改名字</p><p>进到刚建好的的仓库中，选择<strong>settings</strong>，进来就会看到有一个<strong>Repository name</strong>，改成正确的名字.github.io，点rename就好</p></li><li><p>建了private库</p><p>还是在<strong>settings</strong>中直接搜索或者往下拉找到<strong>GitHub Pages</strong>，我们要修改的就是这里，不过现在应该是灰的，因为只有高级账户或者Public仓库才能修改这里。再往下一点有个<strong>Danger Zone</strong>，点第一个<strong>Change repository visibility</strong>右边的<strong>Change Visibility</strong>，选public。然后回到上边，<strong>Source</strong>下拉框选<strong>master</strong>分支就Ok了。</p></li></ul><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><h4 id="部署hexo"><a href="#部署hexo" class="headerlink" title="部署hexo"></a>部署hexo</h4><p>也就是将hexo生成的文章上传到GitHub从而可以再GitPage中展示出来。</p><p>首先安装<strong>deploy-git</strong>插件来让hexo可以部署到GitHub上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后打开<strong>_config.yml</strong>，搜索或翻到最下边，找到**deploy:**修改其中的参数，记得保存。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/&quot;你的用户名&quot;/&quot;你的用户名&quot;.gihub.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>最后只需要运行下边命令就会把生成的文件上传到仓库了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean <span class="comment"># 清除之前的产物</span></span><br><span class="line">hexo generate <span class="comment"># 生成静态网站</span></span><br><span class="line">hexo deploy <span class="comment"># 上传仓库部署</span></span><br></pre></td></tr></table></figure><p>稍等一会，然后打开<strong>你的名字.github.io</strong>应该就可以看到网站了，如果显示404可以参考上边的两种情况解决方案。由于静态网站文件都在GitHub所以国内上基本都会有些卡，以后可能会考虑部署到自己的服务器上，配套可以搞一套域名。</p><p>另外<strong>_config.yml</strong>中有很多配置项，可以参考<a href="https://hexo.io/zh-cn/docs/configuration">官网doc</a>文档来根据个人需要配置，这个博客用到的一些配置会写在最后。</p><h4 id="多分支"><a href="#多分支" class="headerlink" title="多分支"></a>多分支</h4><p>由于deploy命令只是把生成的静态网站上传，如果跨机器工作我们还需要把源码也上传到仓库，这样如果换了机器只需要拉下来仓库就可以继续工作了。</p><p>我们可以使用同仓库两个分支，一个分支用于提供给GitPage渲染，一个用于工作。首先退出当前博客文件夹，并把远程仓库clone下来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/<span class="string">&quot;你的名字&quot;</span>/<span class="string">&quot;你的名字&quot;</span>.github.io.git</span><br><span class="line"><span class="built_in">cd</span> <span class="string">&quot;你的名字&quot;</span>.github.io</span><br></pre></td></tr></table></figure><p>这样就把master分支clone下来了，但是里边只是hexo的产物，我们需要切换分支，把源码也push上去。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b hexoBlog <span class="comment"># 分支名字随便取</span></span><br></pre></td></tr></table></figure><p>然后把文件夹内除了**.git<strong>文件夹以外的都删掉，并把原来博客文件夹内除了</strong>.deploy_git**文件夹以外的文件都复制过来</p><h3 id="发布一篇Hello-World"><a href="#发布一篇Hello-World" class="headerlink" title="发布一篇Hello World"></a>发布一篇Hello World</h3>]]></content>
    
    
    <summary type="html">&lt;p&gt;如何在Mac平台搭建一个跟这个网站一样的博客，记录一下踩过的坑。&lt;/p&gt;</summary>
    
    
    
    <category term="其他" scheme="https://kjy563214.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
  </entry>
  
  <entry>
    <title>Test Page</title>
    <link href="https://kjy563214.github.io/uncategorized/Test-Page/"/>
    <id>https://kjy563214.github.io/uncategorized/Test-Page/</id>
    <published>2021-01-22T08:10:38.000Z</published>
    <updated>2021-01-24T06:27:06.140Z</updated>
    
    <content type="html"><![CDATA[<p>这是个置顶文章</p><a id="more"></a><p>测试</p><ul><li><p>图片</p><p><img src="/uncategorized/Test-Page/testPic.jpeg" alt="测试图片"></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;这是个置顶文章&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://kjy563214.github.io/hello-world/Hello-World/"/>
    <id>https://kjy563214.github.io/hello-world/Hello-World/</id>
    <published>2021-01-22T08:00:38.000Z</published>
    <updated>2021-01-22T09:04:24.365Z</updated>
    
    <content type="html"><![CDATA[<p>Hello World!</p><a id="more"></a><h1 id="First-Blog"><a href="#First-Blog" class="headerlink" title="First Blog"></a>First Blog</h1>]]></content>
    
    
    <summary type="html">&lt;p&gt;Hello World!&lt;/p&gt;</summary>
    
    
    
    <category term="hello world" scheme="https://kjy563214.github.io/categories/hello-world/"/>
    
    
  </entry>
  
</feed>
